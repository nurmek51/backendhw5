services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    command: sh -c "python -m src.database && uvicorn src.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FRONTEND_URLS: ${FRONTEND_URLS}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
    depends_on:
      - db
      - redis

  celery_worker:
    build:
      context: ./backend
    command: celery -A src.celery_worker worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/0
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
    depends_on:
      - backend

  celery_beat:
    build:
      context: ./backend
    command: celery -A src.celery_worker beat --loglevel=info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/0
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: http://backend:8000
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  pg_data:
  redis_data: